getUsers().then(response => {
  let source = `
  <ul class="list">
    {{#each this}}
    <li class="item">
      <img src="{{avatar}}" class="avatar" alt="{{name}}" />
      <div class="content">
        <h2 class="name">{{name}}</h2>
        <button class="ui bottom attached button" aria-label="Toggle Details for {{name}}" aria-expanded="false" aria-controls="extra-{{id}}">
          Toggle Details
        </button>
      </div>
      <div class="extra content hidden" id="extra-{{id}}">
        <div class="id">Id: <strong>{{id}}</strong></div>
        <div class="right floated created">Created at: <strong>{{createdAt}}</strong></div>
      </div>
      </div>
    </li>
    {{/each}}
  </ul>
  `;
  const template = Handlebars.compile(source);
  var result = template(response);
  /* Add the results generated by Handlebars */
  document.querySelector('#placeholder').innerHTML = result;
  /* Generate a node list with all the buttons */
  const buttons = document.querySelectorAll('.button');
  /* Make an array from the node list */
  const buttonsArray = Array.prototype.slice.call(buttons);

  buttonsArray.map(button => {
    /* Add a click listener to each button */
    button.addEventListener('click', e => {
      /* Toggle aria-expanded attribute */
      e.target.setAttribute(
        'aria-expanded',
        e.target.getAttribute('aria-expanded') === 'true' ? false : true
      );
      /* Toggle the class hidden to show/hide placeholder */
      e.target.parentNode.nextElementSibling.classList.toggle('hidden');
    });
  });
});
